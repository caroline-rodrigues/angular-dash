{"version":3,"sources":["webpack:///./src/app/client/client.component.html","webpack:///./src/app/client/client.component.ts","webpack:///./src/app/client/client.module.ts","webpack:///./src/app/client/client.routing.ts"],"names":[],"mappings":"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","file":"client-client-module.js","sourcesContent":["module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\" style=\\\"padding: 0.5rem\\\">\\n          <div class=\\\"header\\\">\\n            <div style=\\\"display: flex; justify-content: space-between\\\">\\n              <h4 class=\\\"title\\\">Clientes</h4>\\n              <button\\n                class=\\\"btn btn-success btn-fill btn-wd\\\"\\n                routerLink=\\\"/components/new-client\\\"\\n              >\\n                Novo Cliente\\n              </button>\\n            </div>\\n            <form role=\\\"search\\\" style=\\\"padding-top: 1rem\\\">\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  value=\\\"\\\"\\n                  class=\\\"form-control w-100\\\"\\n                  placeholder=\\\"Search...\\\"\\n                  [(ngModel)]=\\\"searchQuery\\\"\\n                  name=\\\"search\\\"\\n                  (input)=\\\"filterItems()\\\"\\n                />\\n                <span class=\\\"input-group-addon\\\">\\n                  <i class=\\\"fa fa-search\\\"></i>\\n                </span>\\n              </div>\\n            </form>\\n          </div>\\n          <div class=\\\"content table-responsive table-full-width\\\">\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th class=\\\"text-center\\\">{{ headerRow[0] }}</th>\\n                  <th class=\\\"text-center\\\">{{ headerRow[1] }}</th>\\n                  <th class=\\\"text-center\\\">{{ headerRow[2] }}</th>\\n                  <th class=\\\"text-center\\\">{{ headerRow[3] }}</th>\\n                  <th class=\\\"text-center\\\">{{ headerRow[4] }}</th>\\n                  <th class=\\\"text-center\\\">{{ headerRow[6] }}</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let client of filteredRows\\\">\\n                  <td class=\\\"text-center\\\">{{ client?._id }}</td>\\n                  <td class=\\\"text-center\\\">{{ client?.name }}</td>\\n                  <td class=\\\"text-center\\\">{{ client?.cpf }}</td>\\n                  <td class=\\\"text-center\\\">{{ client?.createdAt }}</td>\\n                  <td class=\\\"text-center\\\">{{ client?.birthDate }}</td>\\n                  <td class=\\\"td-actions text-center\\\">\\n                    <button\\n                      rel=\\\"tooltip\\\"\\n                      title=\\\"Edit Profile\\\"\\n                      class=\\\"btn btn-success btn-simple btn-xs\\\"\\n                      (click)=\\\"editProfile(client?._id)\\\"\\n                    >\\n                      <i class=\\\"fa fa-edit\\\"></i>\\n                    </button>\\n                    <button\\n                      rel=\\\"tooltip\\\"\\n                      title=\\\"Remove\\\"\\n                      class=\\\"btn btn-danger btn-simple btn-xs\\\"\\n                      (click)=\\\"delete(client?._id)\\\"\\n                    >\\n                      <i class=\\\"fa fa-times\\\"></i>\\n                    </button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div style=\\\"display: flex; justify-content: center\\\">\\n            <ul class=\\\"pagination\\\">\\n              <li\\n                [class.disabled]=\\\"currentPage === 1\\\"\\n                (click)=\\\"changePage(currentPage - 1)\\\"\\n              >\\n                <a><<</a>\\n              </li>\\n              <li\\n                [class.active]=\\\"currentPage === page\\\"\\n                *ngFor=\\\"let page of totalPagesArray\\\"\\n              >\\n                <a (click)=\\\"changePage(page)\\\">{{ page }}</a>\\n              </li>\\n              <li\\n                [class.disabled]=\\\"currentPage === totalPages\\\"\\n                (click)=\\\"changePage(currentPage + 1)\\\"\\n              >\\n                <a>>></a>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { ClientService } from \"./client.service\";\n\n@Component({\n  selector: \"app-client-cmp\",\n  templateUrl: \"./client.component.html\",\n})\nexport class ClientComponent implements OnInit {\n  searchQuery: string = \"\";\n  currentPage: number = 1;\n  itemsPerPage: number = 10;\n  pagesToShow: number = 3;\n  filteredRows: any[];\n  totalPagesArray: any[] = [];\n  totalPages: number;\n  clientList: any[] = [];\n  headerRow: string[] = [\n    \"ID\",\n    \"Nome\",\n    \"CPF\",\n    \"Data cadastro\",\n    \"Aniversário\",\n    \"Ações\",\n  ];\n  constructor(private clientService: ClientService, private router: Router) {}\n\n  ngOnInit() {\n    this.getAll(false);\n  }\n\n  getAll(event: boolean) {\n    this.clientService\n      .getAll()\n      .pipe(map((clientResponse) => clientResponse.results))\n      .subscribe((clientList) => {\n        this.clientList = clientList;\n        this.totalPages = Math.ceil(this.clientList.length / this.itemsPerPage);\n\n        if (event && this.filteredRows.length === 1 && this.currentPage !== 1) {\n          this.currentPage = this.totalPages;\n        }\n\n        this.filteredRows = this.paginate(this.clientList);\n        this.totalPagesArray = this.calculateTotalPagesArray(\n          this.currentPage,\n          this.totalPages\n        );\n      });\n  }\n\n  filterItems() {\n    this.filteredRows = this.paginate(this.clientList).filter((client) => {\n      const clientValues = Object.keys(client).map(\n        (keyframes) => client[keyframes]\n      );\n      return clientValues\n        .toString()\n        .toLowerCase()\n        .includes(this.searchQuery.toLowerCase());\n    });\n  }\n\n  delete(client: string) {\n    this.clientService.delete(client).subscribe(() => {\n      this.getAll(true);\n    });\n  }\n\n  editProfile(clientId: string): void {\n    this.router.navigate([\"/components/new-client\"], {\n      queryParams: { id: clientId },\n    });\n  }\n\n  paginate(data: any[]): any[] {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return data.slice(startIndex, endIndex);\n  }\n\n  calculateTotalPagesArray(currentPage: number, totalPages: number): number[] {\n    const pagesArray: number[] = [];\n    const startPage = Math.max(1, currentPage - this.pagesToShow);\n    const endPage = Math.min(totalPages, currentPage + this.pagesToShow);\n\n    for (let i = startPage; i <= endPage; i++) {\n      pagesArray.push(i);\n    }\n\n    return pagesArray;\n  }\n\n  changePage(page: number): void {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n      this.filteredRows = this.paginate(this.clientList);\n      this.totalPagesArray = this.calculateTotalPagesArray(\n        this.currentPage,\n        this.totalPages\n      );\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { ClientComponent } from \"./client.component\";\nimport { ClientRoutes } from \"./client.routing\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(ClientRoutes), FormsModule],\n\n  declarations: [ClientComponent],\n})\nexport class ClientModule {}\n","import { Routes } from \"@angular/router\";\nimport { ClientComponent } from \"./client.component\";\n\nexport const ClientRoutes: Routes = [\n  {\n    path: \"\",\n    children: [\n      {\n        path: \"\",\n        component: ClientComponent,\n      },\n    ],\n  },\n];\n"],"sourceRoot":""}